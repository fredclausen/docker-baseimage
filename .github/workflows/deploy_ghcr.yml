name: Deploy

on:

  # Build and deploy the image on pushes to main branch
  push:
    # Only publish on push to main branch
    branches:
      - main
    # Don't trigger if it's just a documentation update
    paths-ignore:
      - '**.md'
      - '**.MD'
      - 'LICENSE'
      - '.gitattributes'
      - '.gitignore'
      - '.dockerignore'

  # Test build/deploy on PR (no push, build only)
  pull_request:
    # Only run on PR to main
    branches:
      - main
    # Don't trigger if it's just a documentation update
    paths-ignore:
      - '**.md'
      - '**.MD'
      - 'LICENSE'
      - '.gitattributes'
      - '.gitignore'
      - '.dockerignore'

  # Build and deploy the image nightly (to ensure we pick up any security updates)
  schedule:
    - cron: "0 12 * * *"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy_ghcr:
    name: Deploy to ghcr.io
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v2

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Build & Push Dockerfile (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/fredclausen/docker-baseimage:base
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/fredclausen/docker-baseimage:base
          labels: ${{ steps.meta.outputs.labels }}

      # Build & Push Dockerfile.rtlsdr (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/fredclausen/docker-baseimage:rtlsdr
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.rtlsdr
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/fredclausen/docker-baseimage:rtlsdr
          labels: ${{ steps.meta.outputs.labels }}

      # Build & Push Dockerfile.readsb-netonly (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/fredclausen/docker-baseimage:readsb-netonly
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.readsb-netonly
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/fredclausen/docker-baseimage:readsb-netonly
          labels: ${{ steps.meta.outputs.labels }}

      # Build & Push Dockerfile.readsb-full (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/fredclausen/docker-baseimage:readsb-full
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.readsb-full
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/fredclausen/docker-baseimage:readsb-full
          labels: ${{ steps.meta.outputs.labels }}
