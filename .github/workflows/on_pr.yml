---
name: Pull Request

on:
  # Enable manual running of action if necessary
  workflow_dispatch:
  # Build and test deployment the image on pushes to main branch
  pull_request:
    # Only publish on push to main branch
    branches:
      - main
    # Only run if the PR yaml has changed or a Dockerfile has changed
    paths:
      - Dockerfile**
      - "**on_pr.yml"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  hadolint:
    name: Run hadolint against docker files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Pull hadolint/hadolint:latest Image
        run: docker pull hadolint/hadolint:latest
      - name: Run hadolint against Dockerfiles
        run: docker run --rm -i -v "$PWD":/workdir --workdir /workdir --entrypoint hadolint hadolint/hadolint --ignore DL3003 --ignore DL3006 --ignore DL3010 --ignore DL4001 --ignore DL3007 --ignore DL3008 --ignore SC2068 --ignore DL3007 --ignore SC1091 --ignore DL3013 --ignore DL3010 $(find . -type f -iname "Dockerfile*")

  deploy_ghcr_base:
    name: Test deploy base image to ghcr.io
    needs: [hadolint]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Check out our code
      - name: Checkout
        uses: actions/checkout@v2

      # List of files to check to trigger a rebuild on this job
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Build & Push Dockerfile (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/sdr-enthusiasts/docker-baseimage:base
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.base
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: true
          tags: ghcr.io/sdr-enthusiasts/docker-baseimage:base-test
          labels: ${{ steps.meta.outputs.labels }}

  deploy_ghcr_python:
    name: Test deploy python to ghcr.io
    runs-on: ubuntu-latest
    needs: [deploy_ghcr_base]
    permissions:
      contents: read
      packages: write

    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v2

      # List of files to check to trigger a rebuild on this job
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base
            Dockerfile.python

      - name: Get changed status of parent
        id: changed-files-parent
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1

      - name: Patch dockerfile
        if: steps.changed-files-parent.outputs.any_changed == 'true'
        id: patch-dockerfile
        run: sed -i "s/^FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:base/FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:base-test/g" Dockerfile.python

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Build & Push Dockerfile.python (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/sdr-enthusiasts/docker-baseimage:python
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.python
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: true
          tags: ghcr.io/sdr-enthusiasts/docker-baseimage:python-test
          labels: ${{ steps.meta.outputs.labels }}

  deploy_ghcr_rtlsdr:
    name: Test deploy rtlsdr to ghcr.io
    runs-on: ubuntu-latest
    needs: [deploy_ghcr_base]
    permissions:
      contents: read
      packages: write

    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v2

      # List of files to check to trigger a rebuild on this job
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base
            Dockerfile.rtlsdr

      - name: Get changed status of parent
        id: changed-files-parent
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1

      - name: Patch dockerfile
        if: steps.changed-files-parent.outputs.any_changed == 'true'
        id: patch-dockerfile
        run: sed -i "s/^FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:base/FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:base-test/g" Dockerfile.rtlsdr

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Build & Push Dockerfile.rtlsdr (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/sdr-enthusiasts/docker-baseimage:rtlsdr
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.rtlsdr
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: true
          tags: ghcr.io/sdr-enthusiasts/docker-baseimage:rtlsdr-test
          labels: ${{ steps.meta.outputs.labels }}

  deploy_ghcr_readsb-netonly:
    name: Test deploy readsb-netonly to ghcr.io
    runs-on: ubuntu-latest
    needs: [deploy_ghcr_base]
    permissions:
      contents: read
      packages: write

    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v2

      # List of files to check to trigger a rebuild on this job
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base
            Dockerfile.readsb-netonly

      - name: Get changed status of parent
        id: changed-files-parent
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1

      - name: Patch dockerfile
        if: steps.changed-files-parent.outputs.any_changed == 'true'
        id: patch-dockerfile
        run: sed -i "s/^FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:base/FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:base-test/g" Dockerfile.readsb-netonly

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Build & Push Dockerfile.readsb-netonly (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/sdr-enthusiasts/docker-baseimage:readsb-netonly
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.readsb-netonly
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: true
          tags: ghcr.io/sdr-enthusiasts/docker-baseimage:readsb-netonly-test
          labels: ${{ steps.meta.outputs.labels }}

  deploy_ghcr_readsb-full:
    name: Test deploy readsb-full to ghcr.io
    runs-on: ubuntu-latest
    needs: [deploy_ghcr_base, deploy_ghcr_rtlsdr]
    permissions:
      contents: read
      packages: write

    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v2

      # List of files to check to trigger a rebuild on this job
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base
            Dockerfile.readsb-full
            Dockerfile.rtlsdr

      - name: Get changed status of parent
        id: changed-files-parent
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.rtlsdr
            Dockerfile.base

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1

      - name: Patch dockerfile
        if: steps.changed-files-parent.outputs.any_changed == 'true'
        id: patch-dockerfile
        run: sed -i "s/^FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:rtlsdr/FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:rtlsdr-test/g" Dockerfile.readsb-full

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Build & Push Dockerfile.readsb-full (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/sdr-enthusiasts/docker-baseimage:readsb-full
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.readsb-full
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: true
          tags: ghcr.io/sdr-enthusiasts/docker-baseimage:readsb-full-test
          labels: ${{ steps.meta.outputs.labels }}

  deploy_ghcr_acars-decoder:
    name: Test deploy acars-decoder to ghcr.io
    runs-on: ubuntu-latest
    needs: [deploy_ghcr_base, deploy_ghcr_rtlsdr]
    permissions:
      contents: read
      packages: write

    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v2

      # List of files to check to trigger a rebuild on this job
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base
            Dockerfile.acars-decoder
            Dockerfile.rtlsdr

      - name: Get changed status of parent
        id: changed-files-parent
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.rtlsdr
            Dockerfile.base

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1

      - name: Patch dockerfile
        if: steps.changed-files-parent.outputs.any_changed == 'true'
        id: patch-dockerfile
        run: sed -i "s/^FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:rtlsdr/FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:rtlsdr-test/g" Dockerfile.acars-decoder

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Build & Push Dockerfile.acars (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/sdr-enthusiasts/docker-baseimage:acars-decoder
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.acars-decoder
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: true
          tags: ghcr.io/sdr-enthusiasts/docker-baseimage:acars-decoder-test
          labels: ${{ steps.meta.outputs.labels }}

  deploy_soapyrtlsdr:
    name: Test deploy soapyrtlsdr to ghcr.io
    needs: [deploy_ghcr_rtlsdr]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      # List of files to check to trigger a rebuild on this job
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base
            Dockerfile.rtlsdr
            Dockerfile.soapyrtlsdr

      - name: Get changed status of parent
        id: changed-files-parent
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.rtlsdr
            Dockerfile.base

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1

      - name: Patch dockerfile
        if: steps.changed-files-parent.outputs.any_changed == 'true'
        id: patch-dockerfile
        run: sed -i "s/^FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:rtlsdr/FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:rtlsdr-test/g" Dockerfile.soapyrtlsdr

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Build & Push Dockerfile (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/sdr-enthusiasts/docker-baseimage:soapyrtlsdr
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.soapyrtlsdr
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: true
          tags: ghcr.io/sdr-enthusiasts/docker-baseimage:soapyrtlsdr-test
          labels: ${{ steps.meta.outputs.labels }}

  deploy_dump978-full:
    name: Test deploy dump978-full to ghcr.io
    needs: [deploy_soapyrtlsdr]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      # List of files to check to trigger a rebuild on this job
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base
            Dockerfile.rtlsdr
            Dockerfile.soapyrtlsdr
            Dockerfile.dump978-full

      - name: Get changed status of parent
        id: changed-files-parent
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.soapyrtlsdr
            Dockerfile.base
            Dockerfile.rtlsdr

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1

      - name: Patch dockerfile
        if: steps.changed-files-parent.outputs.any_changed == 'true'
        id: patch-dockerfile
        run: sed -i "s/^FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:soapyrtlsdr/FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:soapyrtlsdr-test/g" Dockerfile.dump978-full

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Build & Push Dockerfile (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/sdr-enthusiasts/docker-baseimage:dump978-full
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.dump978-full
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: true
          tags: ghcr.io/sdr-enthusiasts/docker-baseimage:dump978-full-test
          labels: ${{ steps.meta.outputs.labels }}

  deploy_wreadsb-netonly:
    name: Test deploy wreadsb-netonly to ghcr.io
    needs: [deploy_ghcr_base]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      # List of files to check to trigger a rebuild on this job
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base
            Dockerfile.wreadsb-netonly

      - name: Get changed status of parent
        id: changed-files-parent
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1

      - name: Patch dockerfile
        if: steps.changed-files-parent.outputs.any_changed == 'true'
        id: patch-dockerfile
        run: sed -i "s/^FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:base/FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:base-test/g" Dockerfile.wreadsb-netonly

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Build & Push Dockerfile (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/sdr-enthusiasts/docker-baseimage:wreadsb-netonly
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.wreadsb-netonly
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: true
          tags: ghcr.io/sdr-enthusiasts/docker-baseimage:wreadsb-netonly-test
          labels: ${{ steps.meta.outputs.labels }}

  deploy_qemu:
    name: Test deploy qemu to ghcr.io
    needs: [deploy_ghcr_base]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      # List of files to check to trigger a rebuild on this job
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base
            Dockerfile.qemu

      - name: Get changed status of parent
        id: changed-files-parent
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            Dockerfile.base

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v1

      - name: Patch dockerfile
        if: steps.changed-files-parent.outputs.any_changed == 'true'
        id: patch-dockerfile
        run: sed -i "s/^FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:base/FROM ghcr.io\/sdr-enthusiasts\/docker-baseimage:base-test/g" Dockerfile.qemu

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Build & Push Dockerfile (only push if this action was NOT triggered by a PR)
      - name: Build & Push ghcr.io/sdr-enthusiasts/docker-baseimage:qemu
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.qemu
          no-cache: true
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64
          push: true
          tags: ghcr.io/sdr-enthusiasts/docker-baseimage:qemu-test
          labels: ${{ steps.meta.outputs.labels }}
